CREATE OR REPLACE PACKAGE BODY STD_APPLICATION IS
	
  /*
   * STDLIB for Oracle Forms 10g
   * Copyright (c) 2017, Pawe≈Ç Kierzkowski
   * License: MIT
   */

  ------------------------------------------------------------------------------
  -- Private API declarations
  ------------------------------------------------------------------------------

  FUNCTION GET_PROPERTY(P_PROPERTY IN NUMBER) RETURN VARCHAR2;
  
  PROCEDURE SET_PROPERTY(P_PROPERTY IN NUMBER, P_VALUE IN VARCHAR2);

  FUNCTION GET_NUMBER_PROPERTY(P_PROPERTY IN NUMBER) RETURN NUMBER;
  
  PROCEDURE SET_NUMBER_PROPERTY(P_PROPERTY IN NUMBER, P_VALUE IN NUMBER);

  FUNCTION GET_BOOLEAN_PROPERTY(P_PROPERTY IN NUMBER) RETURN BOOLEAN;
  
  PROCEDURE SET_BOOLEAN_PROPERTY(P_PROPERTY IN NUMBER, P_STATE IN BOOLEAN);
  

  ------------------------------------------------------------------------------
  -- Public API
  ------------------------------------------------------------------------------
  
  FUNCTION INSTANCE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_INSTANCE();
  END INSTANCE;


  FUNCTION GET_INSTANCE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.APPLICATION_INSTANCE);
  END GET_INSTANCE;


  FUNCTION BUILTIN_DATE_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_BUILTIN_DATE_FORMAT();
  END BUILTIN_DATE_FORMAT;


  FUNCTION GET_BUILTIN_DATE_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.BUILTIN_DATE_FORMAT);
  END GET_BUILTIN_DATE_FORMAT;


  PROCEDURE SET_BUILTIN_DATE_FORMAT(P_DATE_FORMAT IN VARCHAR2)
  IS
  BEGIN
    SET_PROPERTY(STD_APPLICATION_PROPS.BUILTIN_DATE_FORMAT, P_DATE_FORMAT);
  END SET_BUILTIN_DATE_FORMAT;
  

  FUNCTION CALLING_FORM RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_CALLING_FORM();
  END CALLING_FORM;


  FUNCTION GET_CALLING_FORM RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.CALLING_FORM);
  END GET_CALLING_FORM;


  FUNCTION CONNECT_STRING RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_CONNECT_STRING();
  END CONNECT_STRING;


  FUNCTION GET_CONNECT_STRING RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.CONNECT_STRING);
  END GET_CONNECT_STRING;


  FUNCTION CURRENT_FORM_FILENAME RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_CURRENT_FORM_FILENAME();
  END CURRENT_FORM_FILENAME;


  FUNCTION GET_CURRENT_FORM_FILENAME RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.CURRENT_FORM);
  END GET_CURRENT_FORM_FILENAME;


  FUNCTION CURRENT_FORM_NAME RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_CURRENT_FORM_NAME();
  END CURRENT_FORM_NAME;


  FUNCTION GET_CURRENT_FORM_NAME RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.CURRENT_FORM_NAME);
  END GET_CURRENT_FORM_NAME;


  FUNCTION CURSOR_STYLE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_CURSOR_STYLE();
  END CURSOR_STYLE;


  FUNCTION GET_CURSOR_STYLE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.CURSOR_STYLE);
  END GET_CURSOR_STYLE;

  
  PROCEDURE SET_CURSOR_STYLE(P_CURSOR_STYLE IN VARCHAR2)
  IS
  BEGIN
    SET_PROPERTY(STD_APPLICATION_PROPS.CURSOR_STYLE, P_CURSOR_STYLE);
  END SET_CURSOR_STYLE;

  FUNCTION DATASOURCE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_DATASOURCE();
  END DATASOURCE;


  FUNCTION GET_DATASOURCE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.DATASOURCE);
  END GET_DATASOURCE;


  FUNCTION DATE_FORMAT_COMPAT_MODE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_DATE_FORMAT_COMPAT_MODE();
  END DATE_FORMAT_COMPAT_MODE;


  FUNCTION GET_DATE_FORMAT_COMPAT_MODE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.DATE_FORMAT_COMPATIBILITY_MODE);
  END GET_DATE_FORMAT_COMPAT_MODE;

  
  PROCEDURE SET_DATE_FORMAT_COMPAT_MODE(P_MODE IN VARCHAR2)
  IS
  BEGIN
    SET_PROPERTY(STD_APPLICATION_PROPS.DATE_FORMAT_COMPATIBILITY_MODE, P_MODE);
  END SET_DATE_FORMAT_COMPAT_MODE;

  FUNCTION DISPLAY_HEIGHT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_DISPLAY_HEIGHT();
  END DISPLAY_HEIGHT;


  FUNCTION GET_DISPLAY_HEIGHT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.DISPLAY_HEIGHT);
  END GET_DISPLAY_HEIGHT;


  FUNCTION DISPLAY_WIDTH RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_DISPLAY_WIDTH();
  END DISPLAY_WIDTH;


  FUNCTION GET_DISPLAY_WIDTH RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.DISPLAY_WIDTH);
  END GET_DISPLAY_WIDTH;


  FUNCTION ERROR_DATE_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_ERROR_DATE_FORMAT();
  END ERROR_DATE_FORMAT;


  FUNCTION GET_ERROR_DATE_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.ERROR_DATE_FORMAT);
  END GET_ERROR_DATE_FORMAT;


  FUNCTION ERROR_DATETIME_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_ERROR_DATETIME_FORMAT();
  END ERROR_DATETIME_FORMAT;


  FUNCTION GET_ERROR_DATETIME_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.ERROR_DATETIME_FORMAT);
  END GET_ERROR_DATETIME_FORMAT;


  FUNCTION FLAG_USER_VALUE_TOO_LONG RETURN BOOLEAN
  IS
  BEGIN
    RETURN GET_FLAG_USER_VALUE_TOO_LONG();
  END FLAG_USER_VALUE_TOO_LONG;


  FUNCTION GET_FLAG_USER_VALUE_TOO_LONG RETURN BOOLEAN
  IS
  BEGIN
    RETURN GET_BOOLEAN_PROPERTY(STD_APPLICATION_PROPS.FLAG_USER_VALUE_TOO_LONG);
  END GET_FLAG_USER_VALUE_TOO_LONG;

  
  PROCEDURE SET_FLAG_USER_VALUE_TOO_LONG(P_STATE IN BOOLEAN)
  IS
  BEGIN
    SET_BOOLEAN_PROPERTY(STD_APPLICATION_PROPS.FLAG_USER_VALUE_TOO_LONG, P_STATE);
  END SET_FLAG_USER_VALUE_TOO_LONG;

  FUNCTION OPERATING_SYSTEM RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_OPERATING_SYSTEM();
  END OPERATING_SYSTEM;


  FUNCTION GET_OPERATING_SYSTEM RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.OPERATING_SYSTEM);
  END GET_OPERATING_SYSTEM;


  FUNCTION OUTPUT_DATE_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_OUTPUT_DATE_FORMAT();
  END OUTPUT_DATE_FORMAT;


  FUNCTION GET_OUTPUT_DATE_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.OUTPUT_DATE_FORMAT);
  END GET_OUTPUT_DATE_FORMAT;


  FUNCTION OUTPUT_DATETIME_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_OUTPUT_DATETIME_FORMAT();
  END OUTPUT_DATETIME_FORMAT;


  FUNCTION GET_OUTPUT_DATETIME_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.OUTPUT_DATETIME_FORMAT);
  END GET_OUTPUT_DATETIME_FORMAT;


  FUNCTION PASSWORD RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PASSWORD();
  END PASSWORD;


  FUNCTION GET_PASSWORD RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.PASSWORD);
  END GET_PASSWORD;


  FUNCTION PLSQL_DATE_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PLSQL_DATE_FORMAT();
  END PLSQL_DATE_FORMAT;


  FUNCTION GET_PLSQL_DATE_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.PLSQL_DATE_FORMAT);
  END GET_PLSQL_DATE_FORMAT;

  
  PROCEDURE SET_PLSQL_DATE_FORMAT(P_DATE_FORMAT IN VARCHAR2)
  IS
  BEGIN
    SET_PROPERTY(STD_APPLICATION_PROPS.PLSQL_DATE_FORMAT, P_DATE_FORMAT);
  END SET_PLSQL_DATE_FORMAT;


  FUNCTION SAVEPOINT_NAME RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_SAVEPOINT_NAME();
  END SAVEPOINT_NAME;


  FUNCTION GET_SAVEPOINT_NAME RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.SAVEPOINT_NAME);
  END GET_SAVEPOINT_NAME;


  FUNCTION TIMER_NAME RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_TIMER_NAME();
  END TIMER_NAME;


  FUNCTION GET_TIMER_NAME RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.TIMER_NAME);
  END GET_TIMER_NAME;


  FUNCTION USER_DATE_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_USER_DATE_FORMAT();
  END USER_DATE_FORMAT;


  FUNCTION GET_USER_DATE_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.USER_DATE_FORMAT);
  END GET_USER_DATE_FORMAT;


  FUNCTION USER_DATETIME_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_USER_DATETIME_FORMAT();
  END USER_DATETIME_FORMAT;


  FUNCTION GET_USER_DATETIME_FORMAT RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.USER_DATETIME_FORMAT);
  END GET_USER_DATETIME_FORMAT;


  FUNCTION USER_INTERFACE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_USER_INTERFACE();
  END USER_INTERFACE;


  FUNCTION GET_USER_INTERFACE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.USER_INTERFACE);
  END GET_USER_INTERFACE;


  FUNCTION USER_NLS_CHARACTER_SET RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_USER_NLS_CHARACTER_SET();
  END USER_NLS_CHARACTER_SET;


  FUNCTION GET_USER_NLS_CHARACTER_SET RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.USER_NLS_CHARACTER_SET);
  END GET_USER_NLS_CHARACTER_SET;


  FUNCTION USER_NLS_LANG RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_USER_NLS_LANG();
  END USER_NLS_LANG;


  FUNCTION GET_USER_NLS_LANG RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.USER_NLS_LANG);
  END GET_USER_NLS_LANG;


  FUNCTION USER_NLS_LANGUAGE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_USER_NLS_LANGUAGE();
  END USER_NLS_LANGUAGE;


  FUNCTION GET_USER_NLS_LANGUAGE RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.USER_NLS_LANGUAGE);
  END GET_USER_NLS_LANGUAGE;


  FUNCTION USER_NLS_TERRITORY RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_USER_NLS_TERRITORY();
  END USER_NLS_TERRITORY;


  FUNCTION GET_USER_NLS_TERRITORY RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.USER_NLS_TERRITORY);
  END GET_USER_NLS_TERRITORY;


  FUNCTION USERNAME RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_USERNAME();
  END USERNAME;


  FUNCTION GET_USERNAME RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_PROPERTY(STD_APPLICATION_PROPS.USERNAME);
  END GET_USERNAME;


  ------------------------------------------------------------------------------
  -- Private API
  ------------------------------------------------------------------------------
  
  FUNCTION GET_PROPERTY(P_PROPERTY IN NUMBER) RETURN VARCHAR2
  IS
  BEGIN
    RETURN GET_APPLICATION_PROPERTY(P_PROPERTY);
  END GET_PROPERTY;
  
  
  PROCEDURE SET_PROPERTY(P_PROPERTY IN NUMBER, P_VALUE IN VARCHAR2)
  IS
  BEGIN
    SET_APPLICATION_PROPERTY(P_PROPERTY, P_VALUE);
  END SET_PROPERTY;
  

  FUNCTION GET_NUMBER_PROPERTY(P_PROPERTY IN NUMBER) RETURN NUMBER
  IS
  BEGIN
    RETURN TO_NUMBER(GET_PROPERTY(P_PROPERTY));
  END GET_NUMBER_PROPERTY;
  

  PROCEDURE SET_NUMBER_PROPERTY(P_PROPERTY IN NUMBER, P_VALUE IN NUMBER)
  IS
  BEGIN
    SET_APPLICATION_PROPERTY(P_PROPERTY, TO_NUMBER(P_VALUE));
  END SET_NUMBER_PROPERTY;


  FUNCTION GET_BOOLEAN_PROPERTY(P_PROPERTY IN NUMBER) RETURN BOOLEAN
  IS
  BEGIN
    RETURN GET_PROPERTY(P_PROPERTY) = 'TRUE';
  END GET_BOOLEAN_PROPERTY;


  PROCEDURE SET_BOOLEAN_PROPERTY(P_PROPERTY IN NUMBER, P_STATE IN BOOLEAN)
  IS
    L_STATE NUMBER;
  BEGIN
    IF P_STATE THEN
      L_STATE := PROPERTY_TRUE;
    ELSE
      L_STATE := PROPERTY_FALSE;
    END IF;

    SET_APPLICATION_PROPERTY(P_PROPERTY, L_STATE);
  END SET_BOOLEAN_PROPERTY;
  

END STD_APPLICATION;