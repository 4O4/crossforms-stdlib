CREATE OR REPLACE PACKAGE STD_TYPE IS
	
  /*
   * STDLIB for Oracle Forms 10g
   * Copyright (c) 2017, Pawe≈Ç Kierzkowski
   * License: MIT
   */

  ------------------------------------------------------------------------------
  -- Built-in type aliases
  ------------------------------------------------------------------------------

  SUBTYPE ITEM_HANDLE IS ITEM;
  SUBTYPE BLOCK_HANDLE IS BLOCK;
  SUBTYPE CANVAS_HANDLE IS CANVAS;
  SUBTYPE VIEWPORT_HANDLE IS VIEWPORT;
  SUBTYPE VATTR_HANDLE IS VISUALATTRIBUTE;
  SUBTYPE TAB_PAGE_HANDLE IS TAB_PAGE;
  SUBTYPE WINDOW_HANDLE IS WINDOW;

  
  ------------------------------------------------------------------------------
  -- Common datatypes (constrained)
  ------------------------------------------------------------------------------
	
  SUBTYPE OBJECT_NAME IS VARCHAR2(30);
  SUBTYPE FORM_NAME IS OBJECT_NAME;
  SUBTYPE ITEM_NAME IS OBJECT_NAME;
  SUBTYPE BLOCK_NAME IS OBJECT_NAME;
  SUBTYPE WINDOW_NAME IS OBJECT_NAME;
  SUBTYPE CANVAS_NAME IS OBJECT_NAME;
  SUBTYPE PROPERTY_NAME IS OBJECT_NAME;
  SUBTYPE PROPERTY_VALUE IS VARCHAR2(8191);
  SUBTYPE TAB_PAGE_NAME IS OBJECT_NAME;
  SUBTYPE VIEWPORT_NAME IS OBJECT_NAME;
  SUBTYPE VATTR_NAME IS OBJECT_NAME;
  
  SUBTYPE FULL_ITEM_NAME IS VARCHAR2(61);
  SUBTYPE VARCHAR2_DB IS VARCHAR2(4000);
  SUBTYPE VARCHAR2_PLSQL IS VARCHAR2(32767);
  SUBTYPE MAX_VARCHAR2_DB IS VARCHAR2_DB;
  SUBTYPE MAX_VARCHAR2_PLSQL IS VARCHAR2_PLSQL;
  SUBTYPE EVENT_NAME IS VARCHAR2_DB;


  ------------------------------------------------------------------------------
  -- Types for extra functionalities
  ------------------------------------------------------------------------------
  
  TYPE CLOB_CHUNKS IS TABLE OF CLOB;


  ------------------------------------------------------------------------------
  -- Arg types for easier overloading of procedures
  ------------------------------------------------------------------------------

  TYPE ARG_OBJECT_NAME IS RECORD (DUMMY NUMBER);
  TYPE ARG_ITEM_NAME IS RECORD (DUMMY NUMBER);
  TYPE ARG_BLOCK_NAME IS RECORD (DUMMY NUMBER);
  TYPE ARG_WINDOW_NAME IS RECORD (DUMMY NUMBER);
  TYPE ARG_CANVAS_NAME IS RECORD (DUMMY NUMBER);
  TYPE ARG_PROPERTY_NAME IS RECORD (DUMMY NUMBER);
  TYPE ARG_PROPERTY_VALUE IS RECORD (DUMMY NUMBER);
  TYPE ARG_TAB_PAGE_NAME IS RECORD (DUMMY NUMBER);
  TYPE ARG_VIEWPORT_NAME IS RECORD (DUMMY NUMBER);
  TYPE ARG_VATTR_NAME IS RECORD (DUMMY NUMBER);

  TYPE ARG_FULL_ITEM_NAME IS RECORD (DUMMY NUMBER);
  TYPE ARG_MAX_VARCHAR2_DB IS RECORD (DUMMY NUMBER);
  
  TYPE ARGUMENT_TYPES IS RECORD (
    OBJECT_NAME ARG_OBJECT_NAME,
    ITEM_NAME ARG_ITEM_NAME,
    BLOCK_NAME ARG_BLOCK_NAME,
    WINDOW_NAME ARG_WINDOW_NAME,
    CANVAS_NAME ARG_CANVAS_NAME,
    PROPERTY_NAME ARG_PROPERTY_NAME,
    PROPERTY_VALUE ARG_PROPERTY_VALUE,
    TAB_PAGE_NAME ARG_TAB_PAGE_NAME,
    VIEWPORT_NAME ARG_VIEWPORT_NAME,
    VATTR_NAME ARG_VATTR_NAME,
    FULL_ITEM_NAME ARG_FULL_ITEM_NAME,
    MAX_VARCHAR2_DB ARG_MAX_VARCHAR2_DB
  );


  ARG_TYPE CONSTANT ARGUMENT_TYPES := NULL;

  
  ------------------------------------------------------------------------------
  -- Public API
  ------------------------------------------------------------------------------

  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_FULL_ITEM_NAME
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_OBJECT_NAME
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_ITEM_NAME
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_BLOCK_NAME
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_WINDOW_NAME
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_CANVAS_NAME
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_PROPERTY_NAME
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_PROPERTY_VALUE
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN CLOB,
    P_ARG_TYPE IN ARG_PROPERTY_VALUE
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_TAB_PAGE_NAME
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_VIEWPORT_NAME
  );

  
  PROCEDURE VALIDATE(
    P_PROC_NAME IN VARCHAR2,
    P_ARG_NAME IN VARCHAR2,
    P_VALUE IN VARCHAR2,
    P_ARG_TYPE IN ARG_VATTR_NAME
  );
  
END STD_TYPE;